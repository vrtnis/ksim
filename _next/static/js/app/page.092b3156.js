(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[931],{8562:function(e,n,i){Promise.resolve().then(i.bind(i,8212))},8212:function(e,n,i){"use strict";i.r(n);var a=i(7437),l=i(2265),s=i(1326),t=i(3719),r=i(354),c=i(7183),o=i(4337);function d(e){let{children:n,value:i,index:l,...r}=e;return(0,a.jsx)("div",{role:"tabpanel",hidden:i!==l,id:"simple-tabpanel-".concat(l),"aria-labelledby":"simple-tab-".concat(l),...r,children:i===l&&(0,a.jsx)(s.Z,{sx:{p:3},children:(0,a.jsx)(t.Z,{children:n})})})}let h=[{label:"Home",content:(0,a.jsx)(()=>(0,a.jsx)("div",{children:(0,a.jsx)(t.Z,{children:"Welcome to the K-Scale Sim homepage."})}),{})},{label:"Installation",content:(0,a.jsx)(()=>(0,a.jsxs)("div",{children:[(0,a.jsx)(t.Z,{variant:"h6",children:"Installation"}),(0,a.jsx)(t.Z,{children:"Clone this repository:"}),(0,a.jsx)("pre",{children:(0,a.jsx)("code",{children:"git clone https://github.com/kscalelabs/ksim.git\ncd ksim"})}),(0,a.jsx)(t.Z,{children:"It is recommended that you use a virtual environment to install the dependencies for this project. You can create a new conda environment using the following command:"}),(0,a.jsx)("pre",{children:(0,a.jsx)("code",{children:"conda create --name ksim python=3.11\nconda activate ksim"})}),(0,a.jsx)(t.Z,{children:"To install the dependencies, run the following command:"}),(0,a.jsx)("pre",{children:(0,a.jsx)("code",{children:"make install-dev"})}),(0,a.jsx)(t.Z,{children:"Finally, add your Weights & Biases API key via conda:"}),(0,a.jsx)("pre",{children:(0,a.jsx)("code",{children:"conda env config vars set WANDB_API_KEY=<your api key>"})})]}),{})},{label:"MJX Gym Usage",content:(0,a.jsx)(()=>(0,a.jsxs)("div",{children:[(0,a.jsx)(t.Z,{variant:"h6",children:"MJX Gym Usage"}),(0,a.jsx)(t.Z,{children:"MJX Gym is a library for training and evaluating reinforcement learning agents in MJX environments..."}),(0,a.jsx)(t.Z,{children:"To train the default humanoid environment, first navigate to the /mjx_gym directory:"}),(0,a.jsx)("pre",{children:(0,a.jsx)("code",{children:"cd ksim/mjx_gym\npython train.py --config experiments/default_humanoid_walk.yaml"})}),(0,a.jsx)(t.Z,{children:"Example training curves are shown below:"})]}),{})},{label:"Training",content:(0,a.jsx)(()=>(0,a.jsxs)("div",{children:[(0,a.jsx)(t.Z,{variant:"h6",children:"Training"}),(0,a.jsx)(t.Z,{children:"For quick experimentation, you may specify all relevant training configurations via YAML files..."})]}),{})},{label:"Testing and Rendering",content:(0,a.jsx)(()=>(0,a.jsxs)("div",{children:[(0,a.jsx)(t.Z,{variant:"h6",children:"Testing and Rendering"}),(0,a.jsx)(t.Z,{children:"We provide an easy way to test and render the trained model using the play.py script..."}),(0,a.jsx)("pre",{children:(0,a.jsx)("code",{children:"python play.py --config experiments/default_humanoid_walk.yaml\npython play.py --config experiments/default_humanoid_walk.yaml --use_mujoco"})})]}),{})},{label:"SLURM Cluster",content:(0,a.jsx)(()=>(0,a.jsxs)("div",{children:[(0,a.jsx)(t.Z,{variant:"h6",children:"Running from SLURM Cluster"}),(0,a.jsx)(t.Z,{children:"To run from a SLURM cluster, cd to /mjx_gym/ and run:"}),(0,a.jsx)("pre",{children:(0,a.jsx)("code",{children:"sbatch scripts/train.slurm"})})]}),{})},{label:"Common Issues",content:(0,a.jsx)(()=>(0,a.jsxs)("div",{children:[(0,a.jsx)(t.Z,{variant:"h6",children:"Common Issues"}),(0,a.jsx)(t.Z,{children:"You might see the following error when running train.py:"}),(0,a.jsx)("pre",{children:(0,a.jsx)("code",{children:'An NVIDIA GPU may be present on this machine, but a CUDA-enabled jaxlib is not installed. Falling back to cpu.\n\nOne way to fix this issue is to uninstall jax and jaxlib and reinstall them with your specific CUDA version:\npip uninstall jax jaxlib\npip install --upgrade "jax[cuda12]" -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html'})})]}),{})},{label:"MJCF Reference",content:(0,a.jsx)(()=>(0,a.jsxs)("div",{children:[(0,a.jsx)(t.Z,{variant:"h6",children:"MJCF Reference"}),(0,a.jsx)(t.Z,{children:"To visualize any MJCF file, you can run the following command:"}),(0,a.jsx)("pre",{children:(0,a.jsx)("code",{children:"python3 -m mujoco.viewer --mjcf <path-to-mjcf-file>"})})]}),{})}];n.default=()=>{let[e,n]=(0,l.useState)(0);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(o.Z,{position:"static",children:(0,a.jsx)(r.Z,{value:e,onChange:(e,i)=>{n(i)},"aria-label":"simple tabs example",children:h.map((e,n)=>(0,l.createElement)(c.Z,{label:e.label,id:"simple-tab-".concat(n),"aria-controls":"simple-tabpanel-".concat(n),key:n}))})}),h.map((n,i)=>(0,a.jsx)(d,{value:e,index:i,children:n.content},i))]})}}},function(e){e.O(0,[224,249,971,23,744],function(){return e(e.s=8562)}),_N_E=e.O()}]);